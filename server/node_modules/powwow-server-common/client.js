'use strict';

/**
 * Dependencies.
 */
var logger = require('./logger');
var Promise = require('promise');
var stateManager = require('./stateManager');
var util = require('./util');

/**
 * Current connection
 */
var connection;
var postconnection;

/**
 * New connection
 */
exports.onconnection = function(conn) {
    connection = conn;
};

exports.onpostconnection = function(conn) {
    postconnection = conn;
};

/**
 * Connection closed.
 */
exports.onconnectionclose = function(conn) {
    if (conn === connection) {
        connection = null;
    }
};

exports.onpostconnectionclose = function(conn) {
    if (conn === postconnection) {
        postconnection = null;
    }
};

/**
 * Returns a function that can be used to send RPC notification (request without response).
 */
exports.notification = function (method) {
    // returns promise-like object:
    return function (params) {
        if (!connection && !postconnection) {
            return;
        }
        if(connection) {
            // send JSON-RPC message:
            connection.send(JSON.stringify({
                jsonrpc: '2.0',
                method: method,
                params: params
            }));
        }
        if(postconnection) {
            // send JSON-RPC message:
            logger.info("POSTing response:")
            postconnection.send(JSON.stringify({
                jsonrpc: '2.0',
                method: method,
                params: params
            }));
        }

        util.logResponse(method, params);
        stateManager.endRequest();
    };
};

exports.initialize = exports.notification('ui.initialize');
exports.setScreen = function(screen) { return exports.notification('app.' + screen); };
exports.showLoading = exports.notification('ui.showLoading');
